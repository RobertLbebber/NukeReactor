service: electr-rest
frameworkVersion: '>=1.1.0 <2.0.0'
plugins:
  - serverless-dynamodb-local
  - serverless-offline
custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations
    serverless-offline:
      port: 4000
functions:
  AccountController-getMe:
    handler: dist/endpoints/AccountController.getMe
    events:
      - http:
          path: account/getMe
          method: get
  AccountController-signup:
    handler: dist/endpoints/AccountController.signup
    events:
      - http:
          path: signup
          method: get
  AccountController-login:
    handler: dist/endpoints/AccountController.login
    events:
      - http:
          path: login
          method: get
  AccountController-logout:
    handler: dist/endpoints/AccountController.logout
    events:
      - http:
          path: logout
          method: get
  AccountController-getAccountPage:
    handler: dist/endpoints/AccountController.getAccountPage
    events:
      - http:
          path: account/getAccountPage
          method: get
  AccountController-setAccountPage:
    handler: dist/endpoints/AccountController.setAccountPage
    events:
      - http:
          path: account/setAccountPage
          method: post
  AccountController-getFeed:
    handler: dist/endpoints/AccountController.getFeed
    events:
      - http:
          path: account/getFeed
          method: get
  AccountController-createDefaultAccount:
    handler: dist/endpoints/AccountController.createDefaultAccount
    events:
      - http:
          path: account/createDefaultAccount
          method: get
  AccountController-addAccount:
    handler: dist/endpoints/AccountController.addAccount
    events:
      - http:
          path: account/addAccount
          method: post
  AccountController-getAll:
    handler: dist/endpoints/AccountController.getAll
    events:
      - http:
          path: account/getAll
          method: get
  AccountController-runQuery:
    handler: dist/endpoints/AccountController.runQuery
    events:
      - http:
          path: runQuery
          method: post
provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  stage: dev
  environment:
    DYNAMODB_TABLE: '${self:service}-${opt:stage, self:provider.stage}'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'dynamodb:Query'
        - 'dynamodb:Scan'
        - 'dynamodb:GetItem'
        - 'dynamodb:PutItem'
        - 'dynamodb:UpdateItem'
        - 'dynamodb:DeleteItem'
      Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*'
resources:
  Resources:
    Sessions:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        TableName: electr-rest-us-east-1-Sessions
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
